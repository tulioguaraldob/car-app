// Code generated by MockGen. DO NOT EDIT.
// Source: application/crossApplication.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	dto "github.com/TulioGuaraldoB/car-app/infrastructure/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockICrossApplication is a mock of ICrossApplication interface.
type MockICrossApplication struct {
	ctrl     *gomock.Controller
	recorder *MockICrossApplicationMockRecorder
}

// MockICrossApplicationMockRecorder is the mock recorder for MockICrossApplication.
type MockICrossApplicationMockRecorder struct {
	mock *MockICrossApplication
}

// NewMockICrossApplication creates a new mock instance.
func NewMockICrossApplication(ctrl *gomock.Controller) *MockICrossApplication {
	mock := &MockICrossApplication{ctrl: ctrl}
	mock.recorder = &MockICrossApplicationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICrossApplication) EXPECT() *MockICrossApplicationMockRecorder {
	return m.recorder
}

// Login mocks base method.
func (m *MockICrossApplication) Login(credentialsRequest *dto.Credentials) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", credentialsRequest)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockICrossApplicationMockRecorder) Login(credentialsRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockICrossApplication)(nil).Login), credentialsRequest)
}

// Register mocks base method.
func (m *MockICrossApplication) Register(userRequest *dto.UserRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", userRequest)
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockICrossApplicationMockRecorder) Register(userRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockICrossApplication)(nil).Register), userRequest)
}
